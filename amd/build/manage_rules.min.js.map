{"version":3,"file":"manage_rules.min.js","sources":["../src/manage_rules.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Manage rules JS module.\n *\n * @module     tool_dynamic_cohorts/manage_rules\n * @copyright  2024 Catalyst IT\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport * as DynamicTable from 'core_table/dynamic';\n\n/**\n * A list of used selectors.\n */\nconst SELECTORS = {\n    RULE_MATCHING_USERS: 'tool-dynamic-cohorts-matching-users',\n    RULE_CONDITIONS: '.tool-dynamic-cohorts-condition-view',\n};\n\n/**\n * Init of the module.\n */\nexport const init = () => {\n    loadMatchingUsers();\n    initRuleConditionsModals();\n\n    document.addEventListener(DynamicTable.Events.tableContentRefreshed, () => loadMatchingUsers());\n    document.addEventListener(DynamicTable.Events.tableContentRefreshed, () => initRuleConditionsModals());\n};\n\n/**\n * Load matching users for each rule.\n */\nconst loadMatchingUsers = () => {\n    Array.from(document.getElementsByClassName(SELECTORS.RULE_MATCHING_USERS)).forEach((collection) => {\n        const ruleid = collection.dataset.ruleid;\n        const loader = collection.children[0];\n        const link = collection.children[1];\n\n        Ajax.call([{\n            methodname: 'tool_dynamic_cohorts_get_total_matching_users_for_rule',\n            args: {ruleid: ruleid},\n            done: function (number) {\n                link.children[0].append(number.toLocaleString().replace(/,/g, \" \"));\n                loader.classList.add('hidden');\n                link.classList.remove('hidden');\n            },\n            fail: function (response) {\n                Notification.exception(response);\n            }\n        }]);\n    });\n};\n\n/**\n * Initialise displaying each rule conditions in a modal.\n */\nconst initRuleConditionsModals = () => {\n    document.querySelectorAll(SELECTORS.RULE_CONDITIONS).forEach(link => {\n        let ruleid = link.dataset.ruleid;\n        link.addEventListener('click', function() {\n            Ajax.call([{\n                methodname: 'tool_dynamic_cohorts_get_conditions',\n                args: {ruleid: ruleid},\n                done: function (conditions) {\n                    Templates.render(\n                        'tool_dynamic_cohorts/conditions',\n                        {'conditions' : conditions, 'hidecontrols': true}\n                    ).then(function(html) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.ALERT,\n                            title: getString('conditionsformtitle', 'tool_dynamic_cohorts'),\n                            body: html,\n                            large: true,\n                        }).then(function (modal) {\n                            modal.getRoot().on(ModalEvents.hidden, function() {\n                                modal.destroy();\n                            });\n                            modal.show();\n                        });\n                    }).fail(function(response) {\n                        Notification.exception(response);\n                    });\n                },\n                fail: function (response) {\n                    Notification.exception(response);\n                }\n            }]);\n        });\n    });\n};\n"],"names":["SELECTORS","loadMatchingUsers","initRuleConditionsModals","document","addEventListener","DynamicTable","Events","tableContentRefreshed","Array","from","getElementsByClassName","forEach","collection","ruleid","dataset","loader","children","link","call","methodname","args","done","number","append","toLocaleString","replace","classList","add","remove","fail","response","exception","querySelectorAll","conditions","render","then","html","create","type","ModalFactory","types","ALERT","title","body","large","modal","getRoot","on","ModalEvents","hidden","destroy","show"],"mappings":";;;;;;;g/BAkCMA,8BACmB,sCADnBA,0BAEe,qDAMD,KAChBC,oBACAC,2BAEAC,SAASC,iBAAiBC,aAAaC,OAAOC,uBAAuB,IAAMN,sBAC3EE,SAASC,iBAAiBC,aAAaC,OAAOC,uBAAuB,IAAML,oCAMzED,kBAAoB,KACtBO,MAAMC,KAAKN,SAASO,uBAAuBV,gCAAgCW,SAASC,mBAC1EC,OAASD,WAAWE,QAAQD,OAC5BE,OAASH,WAAWI,SAAS,GAC7BC,KAAOL,WAAWI,SAAS,iBAE5BE,KAAK,CAAC,CACPC,WAAY,yDACZC,KAAM,CAACP,OAAQA,QACfQ,KAAM,SAAUC,QACZL,KAAKD,SAAS,GAAGO,OAAOD,OAAOE,iBAAiBC,QAAQ,KAAM,MAC9DV,OAAOW,UAAUC,IAAI,UACrBV,KAAKS,UAAUE,OAAO,WAE1BC,KAAM,SAAUC,gCACCC,UAAUD,kBASjC5B,yBAA2B,KAC7BC,SAAS6B,iBAAiBhC,2BAA2BW,SAAQM,WACrDJ,OAASI,KAAKH,QAAQD,OAC1BI,KAAKb,iBAAiB,SAAS,yBACtBc,KAAK,CAAC,CACPC,WAAY,sCACZC,KAAM,CAACP,OAAQA,QACfQ,KAAM,SAAUY,+BACFC,OACN,kCACA,YAAgBD,yBAA4B,IAC9CE,MAAK,SAASC,6BACCC,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,MACzBC,OAAO,mBAAU,sBAAuB,wBACxCC,KAAMP,KACNQ,OAAO,IACRT,MAAK,SAAUU,OACdA,MAAMC,UAAUC,GAAGC,sBAAYC,QAAQ,WACnCJ,MAAMK,aAEVL,MAAMM,aAEXtB,MAAK,SAASC,gCACAC,UAAUD,cAG/BD,KAAM,SAAUC,gCACCC,UAAUD"}